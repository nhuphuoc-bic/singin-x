/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/image-demo",{

/***/ "./node_modules/next/dist/build/polyfills/process.js":
/*!***********************************************************!*\
  !*** ./node_modules/next/dist/build/polyfills/process.js ***!
  \***********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar _global_process, _global_process1;\nmodule.exports = ((_global_process = __webpack_require__.g.process) == null ? void 0 : _global_process.env) && typeof ((_global_process1 = __webpack_require__.g.process) == null ? void 0 : _global_process1.env) === \"object\" ? __webpack_require__.g.process : __webpack_require__(/*! next/dist/compiled/process */ \"./node_modules/next/dist/compiled/process/browser.js\");\n\n//# sourceMappingURL=process.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3BvbHlmaWxscy9wcm9jZXNzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSxxQ0FBcUMscUJBQU0saUZBQWlGLHFCQUFNLGtFQUFrRSxxQkFBTSxXQUFXLG1CQUFPLENBQUMsd0ZBQTRCOztBQUV6UCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3BvbHlmaWxscy9wcm9jZXNzLmpzP2NhNjUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX2dsb2JhbF9wcm9jZXNzLCBfZ2xvYmFsX3Byb2Nlc3MxO1xubW9kdWxlLmV4cG9ydHMgPSAoKF9nbG9iYWxfcHJvY2VzcyA9IGdsb2JhbC5wcm9jZXNzKSA9PSBudWxsID8gdm9pZCAwIDogX2dsb2JhbF9wcm9jZXNzLmVudikgJiYgdHlwZW9mICgoX2dsb2JhbF9wcm9jZXNzMSA9IGdsb2JhbC5wcm9jZXNzKSA9PSBudWxsID8gdm9pZCAwIDogX2dsb2JhbF9wcm9jZXNzMS5lbnYpID09PSBcIm9iamVjdFwiID8gZ2xvYmFsLnByb2Nlc3MgOiByZXF1aXJlKFwibmV4dC9kaXN0L2NvbXBpbGVkL3Byb2Nlc3NcIik7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXByb2Nlc3MuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/polyfills/process.js\n"));

/***/ }),

/***/ "./contexts/ImageCacheContext.tsx":
/*!****************************************!*\
  !*** ./contexts/ImageCacheContext.tsx ***!
  \****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ImageCacheProvider: function() { return /* binding */ ImageCacheProvider; },\n/* harmony export */   useImageCache: function() { return /* binding */ useImageCache; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _utils_indexedDB__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/indexedDB */ \"./utils/indexedDB.ts\");\n/* harmony import */ var _utils_mockImage__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/mockImage */ \"./utils/mockImage.ts\");\n\nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n\n\nconst ImageCacheContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(null);\nconst ImageCacheProvider = (param)=>{\n    let { children, maxCacheSize = 50, cacheExpiryMs = 5 * 60 * 1000 // 5 minutes\n     } = param;\n    _s();\n    const [cache, setCache] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(new Map());\n    const pendingRequests = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(new Map());\n    const cacheRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(new Map());\n    // Keep cacheRef in sync with cache state\n    react__WEBPACK_IMPORTED_MODULE_1___default().useEffect(()=>{\n        cacheRef.current = cache;\n    }, [\n        cache\n    ]);\n    const cleanupExpiredItems = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(async ()=>{\n        const now = Date.now();\n        setCache((prevCache)=>{\n            const newCache = new Map(prevCache);\n            const entries = Array.from(newCache.entries());\n            for (const [key, item] of entries){\n                if (now - item.timestamp > cacheExpiryMs) {\n                    URL.revokeObjectURL(item.objectUrl);\n                    newCache.delete(key);\n                }\n            }\n            return newCache;\n        });\n        // Also cleanup IndexedDB\n        try {\n            await _utils_indexedDB__WEBPACK_IMPORTED_MODULE_2__[\"default\"].cleanupExpired(cacheExpiryMs);\n        } catch (error) {\n            console.warn(\"Failed to cleanup IndexedDB:\", error);\n        }\n    }, [\n        cacheExpiryMs\n    ]);\n    const getImage = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(async (imageId)=>{\n        // Check if we have a cached version using ref to avoid dependency\n        const cachedItem = cacheRef.current.get(imageId);\n        if (cachedItem) {\n            const now = Date.now();\n            if (now - cachedItem.timestamp < cacheExpiryMs) {\n                return cachedItem.objectUrl;\n            } else {\n                // Remove expired item\n                URL.revokeObjectURL(cachedItem.objectUrl);\n                setCache((prev)=>{\n                    const newCache = new Map(prev);\n                    newCache.delete(imageId);\n                    return newCache;\n                });\n            }\n        }\n        // Check if there's already a pending request for this imageId\n        const pendingRequest = pendingRequests.current.get(imageId);\n        if (pendingRequest) {\n            return pendingRequest;\n        }\n        // Create new request\n        const requestPromise = (async ()=>{\n            try {\n                // First, try to get from IndexedDB\n                const dbCachedImage = await _utils_indexedDB__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getImage(imageId);\n                if (dbCachedImage) {\n                    const now = Date.now();\n                    if (now - dbCachedImage.timestamp < cacheExpiryMs) {\n                        // Create object URL from IndexedDB blob\n                        const objectUrl = URL.createObjectURL(dbCachedImage.blob);\n                        // Add to memory cache\n                        setCache((prev)=>{\n                            const newCache = new Map(prev);\n                            newCache.set(imageId, {\n                                blob: dbCachedImage.blob,\n                                objectUrl,\n                                timestamp: dbCachedImage.timestamp\n                            });\n                            return newCache;\n                        });\n                        return objectUrl;\n                    } else {\n                        // Remove expired item from IndexedDB\n                        await _utils_indexedDB__WEBPACK_IMPORTED_MODULE_2__[\"default\"].removeImage(imageId);\n                    }\n                }\n                // If not in IndexedDB or expired, fetch from API\n                console.log(\"fetching image\", imageId);\n                const response = await fetch(\"http://localhost:3008/public/me/ekyc/image/\".concat(imageId), {\n                    method: \"GET\",\n                    headers: {\n                        \"Accept\": \"image/*\"\n                    }\n                });\n                console.log(\"Response status:\", response.status, response.statusText);\n                console.log(\"Response headers:\", Object.fromEntries(response.headers.entries()));\n                if (!response.ok) {\n                    // If backend is not available, try to create a mock image for testing\n                    if (response.status === 404 || response.status === 400) {\n                        console.log(\"Backend returned error, creating mock image for testing\");\n                        const mockBlob = await (0,_utils_mockImage__WEBPACK_IMPORTED_MODULE_3__.createMockImage)(400, 300, \"Mock: \".concat(imageId));\n                        const objectUrl = URL.createObjectURL(mockBlob);\n                        const timestamp = Date.now();\n                        // Add to memory cache\n                        setCache((prev)=>{\n                            const newCache = new Map(prev);\n                            newCache.set(imageId, {\n                                blob: mockBlob,\n                                objectUrl,\n                                timestamp\n                            });\n                            return newCache;\n                        });\n                        return objectUrl;\n                    }\n                    throw new Error(\"Failed to load image: \".concat(response.status, \" \").concat(response.statusText));\n                }\n                const blob = await response.blob();\n                const objectUrl = URL.createObjectURL(blob);\n                const timestamp = Date.now();\n                // Add to memory cache\n                setCache((prev)=>{\n                    const newCache = new Map(prev);\n                    // Remove oldest items if cache is full\n                    if (newCache.size >= maxCacheSize) {\n                        const oldestKey = newCache.keys().next().value;\n                        const oldestItem = newCache.get(oldestKey);\n                        if (oldestItem) {\n                            URL.revokeObjectURL(oldestItem.objectUrl);\n                            newCache.delete(oldestKey);\n                        }\n                    }\n                    newCache.set(imageId, {\n                        blob,\n                        objectUrl,\n                        timestamp\n                    });\n                    return newCache;\n                });\n                // Also save to IndexedDB for persistence\n                try {\n                    await _utils_indexedDB__WEBPACK_IMPORTED_MODULE_2__[\"default\"].setImage(imageId, blob, timestamp);\n                } catch (error) {\n                    console.warn(\"Failed to save to IndexedDB:\", error);\n                }\n                return objectUrl;\n            } finally{\n                // Remove from pending requests\n                pendingRequests.current.delete(imageId);\n            }\n        })();\n        // Store pending request\n        pendingRequests.current.set(imageId, requestPromise);\n        return requestPromise;\n    }, [\n        cacheExpiryMs,\n        maxCacheSize\n    ]); // Removed cache from dependencies\n    const clearCache = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(async ()=>{\n        // Clean up all object URLs\n        const items = Array.from(cache.values());\n        for (const item of items){\n            URL.revokeObjectURL(item.objectUrl);\n        }\n        setCache(new Map());\n        // Also clear pending requests\n        pendingRequests.current.clear();\n        // Clear IndexedDB\n        try {\n            await _utils_indexedDB__WEBPACK_IMPORTED_MODULE_2__[\"default\"].clearAll();\n        } catch (error) {\n            console.warn(\"Failed to clear IndexedDB:\", error);\n        }\n    }, []); // Removed cache dependency\n    const removeFromCache = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(async (imageId)=>{\n        const item = cache.get(imageId);\n        if (item) {\n            URL.revokeObjectURL(item.objectUrl);\n            setCache((prev)=>{\n                const newCache = new Map(prev);\n                newCache.delete(imageId);\n                return newCache;\n            });\n        }\n        // Also remove from IndexedDB\n        try {\n            await _utils_indexedDB__WEBPACK_IMPORTED_MODULE_2__[\"default\"].removeImage(imageId);\n        } catch (error) {\n            console.warn(\"Failed to remove from IndexedDB:\", error);\n        }\n    }, []); // Removed cache dependency\n    const getCacheStats = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(async ()=>{\n        try {\n            return await _utils_indexedDB__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getCacheStats();\n        } catch (error) {\n            console.warn(\"Failed to get cache stats:\", error);\n            return {\n                count: 0,\n                totalSize: 0\n            };\n        }\n    }, []);\n    // Cleanup expired items periodically\n    react__WEBPACK_IMPORTED_MODULE_1___default().useEffect(()=>{\n        const interval = setInterval(cleanupExpiredItems, 60000); // Check every minute\n        return ()=>clearInterval(interval);\n    }, [\n        cleanupExpiredItems\n    ]);\n    // Cleanup on unmount\n    react__WEBPACK_IMPORTED_MODULE_1___default().useEffect(()=>{\n        return ()=>{\n            clearCache();\n        };\n    }, [\n        clearCache\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(ImageCacheContext.Provider, {\n        value: {\n            getImage,\n            clearCache,\n            removeFromCache,\n            getCacheStats\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"/home/nhuphuoc/Workspace/Tool/signinx/contexts/ImageCacheContext.tsx\",\n        lineNumber: 258,\n        columnNumber: 5\n    }, undefined);\n};\n_s(ImageCacheProvider, \"WS6kNzq6/7ID0g6n+QFjWVIYGMw=\");\n_c = ImageCacheProvider;\nconst useImageCache = ()=>{\n    _s1();\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(ImageCacheContext);\n    if (!context) {\n        throw new Error(\"useImageCache must be used within an ImageCacheProvider\");\n    }\n    return context;\n};\n_s1(useImageCache, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"ImageCacheProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./contexts/ImageCacheContext.tsx\n"));

/***/ }),

/***/ "./utils/mockImage.ts":
/*!****************************!*\
  !*** ./utils/mockImage.ts ***!
  \****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createMockImage: function() { return /* binding */ createMockImage; },\n/* harmony export */   mockImageResponse: function() { return /* binding */ mockImageResponse; },\n/* harmony export */   shouldUseMock: function() { return /* binding */ shouldUseMock; }\n/* harmony export */ });\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/next/dist/build/polyfills/process.js\");\n// Mock image generator for testing\nconst createMockImage = function() {\n    let width = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 400, height = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 300, text = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : \"Mock Image\";\n    return new Promise((resolve)=>{\n        const canvas = document.createElement(\"canvas\");\n        canvas.width = width;\n        canvas.height = height;\n        const ctx = canvas.getContext(\"2d\");\n        // Create gradient background\n        const gradient = ctx.createLinearGradient(0, 0, width, height);\n        gradient.addColorStop(0, \"#667eea\");\n        gradient.addColorStop(1, \"#764ba2\");\n        ctx.fillStyle = gradient;\n        ctx.fillRect(0, 0, width, height);\n        // Add some geometric shapes\n        ctx.fillStyle = \"rgba(255, 255, 255, 0.1)\";\n        ctx.beginPath();\n        ctx.arc(width * 0.3, height * 0.3, 50, 0, Math.PI * 2);\n        ctx.fill();\n        ctx.fillStyle = \"rgba(255, 255, 255, 0.1)\";\n        ctx.beginPath();\n        ctx.rect(width * 0.6, height * 0.6, 80, 40);\n        ctx.fill();\n        // Add text\n        ctx.fillStyle = \"white\";\n        ctx.font = \"bold 24px Arial\";\n        ctx.textAlign = \"center\";\n        ctx.textBaseline = \"middle\";\n        ctx.fillText(text, width / 2, height / 2);\n        // Add timestamp\n        ctx.font = \"12px Arial\";\n        ctx.fillText(\"Generated: \".concat(new Date().toLocaleTimeString()), width / 2, height - 20);\n        // Convert to blob\n        canvas.toBlob((blob)=>{\n            resolve(blob);\n        }, \"image/png\");\n    });\n};\n// Mock API response for testing\nconst mockImageResponse = async (imageId)=>{\n    const mockBlob = await createMockImage(400, 300, \"Mock: \".concat(imageId));\n    return new Response(mockBlob, {\n        status: 200,\n        headers: {\n            \"Content-Type\": \"image/png\",\n            \"Content-Length\": mockBlob.size.toString()\n        }\n    });\n};\n// Check if we should use mock data\nconst shouldUseMock = ()=>{\n    // Use mock if in development and backend is not available\n    return  true && (process.env.NEXT_PUBLIC_USE_MOCK === \"true\" || process.env.NEXT_PUBLIC_BACKEND_URL === undefined);\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi91dGlscy9tb2NrSW1hZ2UudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBLG1DQUFtQztBQUM1QixNQUFNQSxrQkFBa0I7UUFDN0JDLHlFQUFnQixLQUNoQkMsMEVBQWlCLEtBQ2pCQyx3RUFBZTtJQUVmLE9BQU8sSUFBSUMsUUFBUSxDQUFDQztRQUNsQixNQUFNQyxTQUFTQyxTQUFTQyxhQUFhLENBQUM7UUFDdENGLE9BQU9MLEtBQUssR0FBR0E7UUFDZkssT0FBT0osTUFBTSxHQUFHQTtRQUNoQixNQUFNTyxNQUFNSCxPQUFPSSxVQUFVLENBQUM7UUFFOUIsNkJBQTZCO1FBQzdCLE1BQU1DLFdBQVdGLElBQUlHLG9CQUFvQixDQUFDLEdBQUcsR0FBR1gsT0FBT0M7UUFDdkRTLFNBQVNFLFlBQVksQ0FBQyxHQUFHO1FBQ3pCRixTQUFTRSxZQUFZLENBQUMsR0FBRztRQUN6QkosSUFBSUssU0FBUyxHQUFHSDtRQUNoQkYsSUFBSU0sUUFBUSxDQUFDLEdBQUcsR0FBR2QsT0FBT0M7UUFFMUIsNEJBQTRCO1FBQzVCTyxJQUFJSyxTQUFTLEdBQUc7UUFDaEJMLElBQUlPLFNBQVM7UUFDYlAsSUFBSVEsR0FBRyxDQUFDaEIsUUFBUSxLQUFLQyxTQUFTLEtBQUssSUFBSSxHQUFHZ0IsS0FBS0MsRUFBRSxHQUFHO1FBQ3BEVixJQUFJVyxJQUFJO1FBRVJYLElBQUlLLFNBQVMsR0FBRztRQUNoQkwsSUFBSU8sU0FBUztRQUNiUCxJQUFJWSxJQUFJLENBQUNwQixRQUFRLEtBQUtDLFNBQVMsS0FBSyxJQUFJO1FBQ3hDTyxJQUFJVyxJQUFJO1FBRVIsV0FBVztRQUNYWCxJQUFJSyxTQUFTLEdBQUc7UUFDaEJMLElBQUlhLElBQUksR0FBRztRQUNYYixJQUFJYyxTQUFTLEdBQUc7UUFDaEJkLElBQUllLFlBQVksR0FBRztRQUNuQmYsSUFBSWdCLFFBQVEsQ0FBQ3RCLE1BQU1GLFFBQVEsR0FBR0MsU0FBUztRQUV2QyxnQkFBZ0I7UUFDaEJPLElBQUlhLElBQUksR0FBRztRQUNYYixJQUFJZ0IsUUFBUSxDQUNWLGNBQThDLE9BQWhDLElBQUlDLE9BQU9DLGtCQUFrQixLQUMzQzFCLFFBQVEsR0FDUkMsU0FBUztRQUdYLGtCQUFrQjtRQUNsQkksT0FBT3NCLE1BQU0sQ0FBQyxDQUFDQztZQUNieEIsUUFBUXdCO1FBQ1YsR0FBRztJQUNMO0FBQ0YsRUFBRTtBQUVGLGdDQUFnQztBQUN6QixNQUFNQyxvQkFBb0IsT0FBT0M7SUFDdEMsTUFBTUMsV0FBVyxNQUFNaEMsZ0JBQWdCLEtBQUssS0FBSyxTQUFpQixPQUFSK0I7SUFFMUQsT0FBTyxJQUFJRSxTQUFTRCxVQUFVO1FBQzVCRSxRQUFRO1FBQ1JDLFNBQVM7WUFDUCxnQkFBZ0I7WUFDaEIsa0JBQWtCSCxTQUFTSSxJQUFJLENBQUNDLFFBQVE7UUFDMUM7SUFDRjtBQUNGLEVBQUU7QUFFRixtQ0FBbUM7QUFDNUIsTUFBTUMsZ0JBQWdCO0lBQzNCLDBEQUEwRDtJQUMxRCxPQUNFQyxLQUF5QixJQUN4QkEsQ0FBQUEsT0FBT0EsQ0FBQ0MsR0FBRyxDQUFDQyxvQkFBb0IsS0FBSyxVQUNwQ0YsT0FBT0EsQ0FBQ0MsR0FBRyxDQUFDRSx1QkFBdUIsS0FBS0MsU0FBUTtBQUV0RCxFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3V0aWxzL21vY2tJbWFnZS50cz8zYmRiIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIE1vY2sgaW1hZ2UgZ2VuZXJhdG9yIGZvciB0ZXN0aW5nXG5leHBvcnQgY29uc3QgY3JlYXRlTW9ja0ltYWdlID0gKFxuICB3aWR0aDogbnVtYmVyID0gNDAwLFxuICBoZWlnaHQ6IG51bWJlciA9IDMwMCxcbiAgdGV4dDogc3RyaW5nID0gJ01vY2sgSW1hZ2UnXG4pOiBQcm9taXNlPEJsb2I+ID0+IHtcbiAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7XG4gICAgY29uc3QgY2FudmFzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnY2FudmFzJyk7XG4gICAgY2FudmFzLndpZHRoID0gd2lkdGg7XG4gICAgY2FudmFzLmhlaWdodCA9IGhlaWdodDtcbiAgICBjb25zdCBjdHggPSBjYW52YXMuZ2V0Q29udGV4dCgnMmQnKSE7XG5cbiAgICAvLyBDcmVhdGUgZ3JhZGllbnQgYmFja2dyb3VuZFxuICAgIGNvbnN0IGdyYWRpZW50ID0gY3R4LmNyZWF0ZUxpbmVhckdyYWRpZW50KDAsIDAsIHdpZHRoLCBoZWlnaHQpO1xuICAgIGdyYWRpZW50LmFkZENvbG9yU3RvcCgwLCAnIzY2N2VlYScpO1xuICAgIGdyYWRpZW50LmFkZENvbG9yU3RvcCgxLCAnIzc2NGJhMicpO1xuICAgIGN0eC5maWxsU3R5bGUgPSBncmFkaWVudDtcbiAgICBjdHguZmlsbFJlY3QoMCwgMCwgd2lkdGgsIGhlaWdodCk7XG5cbiAgICAvLyBBZGQgc29tZSBnZW9tZXRyaWMgc2hhcGVzXG4gICAgY3R4LmZpbGxTdHlsZSA9ICdyZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMSknO1xuICAgIGN0eC5iZWdpblBhdGgoKTtcbiAgICBjdHguYXJjKHdpZHRoICogMC4zLCBoZWlnaHQgKiAwLjMsIDUwLCAwLCBNYXRoLlBJICogMik7XG4gICAgY3R4LmZpbGwoKTtcblxuICAgIGN0eC5maWxsU3R5bGUgPSAncmdiYSgyNTUsIDI1NSwgMjU1LCAwLjEpJztcbiAgICBjdHguYmVnaW5QYXRoKCk7XG4gICAgY3R4LnJlY3Qod2lkdGggKiAwLjYsIGhlaWdodCAqIDAuNiwgODAsIDQwKTtcbiAgICBjdHguZmlsbCgpO1xuXG4gICAgLy8gQWRkIHRleHRcbiAgICBjdHguZmlsbFN0eWxlID0gJ3doaXRlJztcbiAgICBjdHguZm9udCA9ICdib2xkIDI0cHggQXJpYWwnO1xuICAgIGN0eC50ZXh0QWxpZ24gPSAnY2VudGVyJztcbiAgICBjdHgudGV4dEJhc2VsaW5lID0gJ21pZGRsZSc7XG4gICAgY3R4LmZpbGxUZXh0KHRleHQsIHdpZHRoIC8gMiwgaGVpZ2h0IC8gMik7XG5cbiAgICAvLyBBZGQgdGltZXN0YW1wXG4gICAgY3R4LmZvbnQgPSAnMTJweCBBcmlhbCc7XG4gICAgY3R4LmZpbGxUZXh0KFxuICAgICAgYEdlbmVyYXRlZDogJHtuZXcgRGF0ZSgpLnRvTG9jYWxlVGltZVN0cmluZygpfWAsXG4gICAgICB3aWR0aCAvIDIsXG4gICAgICBoZWlnaHQgLSAyMFxuICAgICk7XG5cbiAgICAvLyBDb252ZXJ0IHRvIGJsb2JcbiAgICBjYW52YXMudG9CbG9iKChibG9iKSA9PiB7XG4gICAgICByZXNvbHZlKGJsb2IhKTtcbiAgICB9LCAnaW1hZ2UvcG5nJyk7XG4gIH0pO1xufTtcblxuLy8gTW9jayBBUEkgcmVzcG9uc2UgZm9yIHRlc3RpbmdcbmV4cG9ydCBjb25zdCBtb2NrSW1hZ2VSZXNwb25zZSA9IGFzeW5jIChpbWFnZUlkOiBzdHJpbmcpOiBQcm9taXNlPFJlc3BvbnNlPiA9PiB7XG4gIGNvbnN0IG1vY2tCbG9iID0gYXdhaXQgY3JlYXRlTW9ja0ltYWdlKDQwMCwgMzAwLCBgTW9jazogJHtpbWFnZUlkfWApO1xuXG4gIHJldHVybiBuZXcgUmVzcG9uc2UobW9ja0Jsb2IsIHtcbiAgICBzdGF0dXM6IDIwMCxcbiAgICBoZWFkZXJzOiB7XG4gICAgICAnQ29udGVudC1UeXBlJzogJ2ltYWdlL3BuZycsXG4gICAgICAnQ29udGVudC1MZW5ndGgnOiBtb2NrQmxvYi5zaXplLnRvU3RyaW5nKCksXG4gICAgfSxcbiAgfSk7XG59O1xuXG4vLyBDaGVjayBpZiB3ZSBzaG91bGQgdXNlIG1vY2sgZGF0YVxuZXhwb3J0IGNvbnN0IHNob3VsZFVzZU1vY2sgPSAoKTogYm9vbGVhbiA9PiB7XG4gIC8vIFVzZSBtb2NrIGlmIGluIGRldmVsb3BtZW50IGFuZCBiYWNrZW5kIGlzIG5vdCBhdmFpbGFibGVcbiAgcmV0dXJuIChcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ2RldmVsb3BtZW50JyAmJlxuICAgIChwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19VU0VfTU9DSyA9PT0gJ3RydWUnIHx8XG4gICAgICBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19CQUNLRU5EX1VSTCA9PT0gdW5kZWZpbmVkKVxuICApO1xufTtcbiJdLCJuYW1lcyI6WyJjcmVhdGVNb2NrSW1hZ2UiLCJ3aWR0aCIsImhlaWdodCIsInRleHQiLCJQcm9taXNlIiwicmVzb2x2ZSIsImNhbnZhcyIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsImN0eCIsImdldENvbnRleHQiLCJncmFkaWVudCIsImNyZWF0ZUxpbmVhckdyYWRpZW50IiwiYWRkQ29sb3JTdG9wIiwiZmlsbFN0eWxlIiwiZmlsbFJlY3QiLCJiZWdpblBhdGgiLCJhcmMiLCJNYXRoIiwiUEkiLCJmaWxsIiwicmVjdCIsImZvbnQiLCJ0ZXh0QWxpZ24iLCJ0ZXh0QmFzZWxpbmUiLCJmaWxsVGV4dCIsIkRhdGUiLCJ0b0xvY2FsZVRpbWVTdHJpbmciLCJ0b0Jsb2IiLCJibG9iIiwibW9ja0ltYWdlUmVzcG9uc2UiLCJpbWFnZUlkIiwibW9ja0Jsb2IiLCJSZXNwb25zZSIsInN0YXR1cyIsImhlYWRlcnMiLCJzaXplIiwidG9TdHJpbmciLCJzaG91bGRVc2VNb2NrIiwicHJvY2VzcyIsImVudiIsIk5FWFRfUFVCTElDX1VTRV9NT0NLIiwiTkVYVF9QVUJMSUNfQkFDS0VORF9VUkwiLCJ1bmRlZmluZWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./utils/mockImage.ts\n"));

/***/ }),

/***/ "./node_modules/next/dist/compiled/process/browser.js":
/*!************************************************************!*\
  !*** ./node_modules/next/dist/compiled/process/browser.js ***!
  \************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var __dirname = \"/\";\n(function(){var e={229:function(e){var t=e.exports={};var r;var n;function defaultSetTimout(){throw new Error(\"setTimeout has not been defined\")}function defaultClearTimeout(){throw new Error(\"clearTimeout has not been defined\")}(function(){try{if(typeof setTimeout===\"function\"){r=setTimeout}else{r=defaultSetTimout}}catch(e){r=defaultSetTimout}try{if(typeof clearTimeout===\"function\"){n=clearTimeout}else{n=defaultClearTimeout}}catch(e){n=defaultClearTimeout}})();function runTimeout(e){if(r===setTimeout){return setTimeout(e,0)}if((r===defaultSetTimout||!r)&&setTimeout){r=setTimeout;return setTimeout(e,0)}try{return r(e,0)}catch(t){try{return r.call(null,e,0)}catch(t){return r.call(this,e,0)}}}function runClearTimeout(e){if(n===clearTimeout){return clearTimeout(e)}if((n===defaultClearTimeout||!n)&&clearTimeout){n=clearTimeout;return clearTimeout(e)}try{return n(e)}catch(t){try{return n.call(null,e)}catch(t){return n.call(this,e)}}}var i=[];var o=false;var u;var a=-1;function cleanUpNextTick(){if(!o||!u){return}o=false;if(u.length){i=u.concat(i)}else{a=-1}if(i.length){drainQueue()}}function drainQueue(){if(o){return}var e=runTimeout(cleanUpNextTick);o=true;var t=i.length;while(t){u=i;i=[];while(++a<t){if(u){u[a].run()}}a=-1;t=i.length}u=null;o=false;runClearTimeout(e)}t.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1){for(var r=1;r<arguments.length;r++){t[r-1]=arguments[r]}}i.push(new Item(e,t));if(i.length===1&&!o){runTimeout(drainQueue)}};function Item(e,t){this.fun=e;this.array=t}Item.prototype.run=function(){this.fun.apply(null,this.array)};t.title=\"browser\";t.browser=true;t.env={};t.argv=[];t.version=\"\";t.versions={};function noop(){}t.on=noop;t.addListener=noop;t.once=noop;t.off=noop;t.removeListener=noop;t.removeAllListeners=noop;t.emit=noop;t.prependListener=noop;t.prependOnceListener=noop;t.listeners=function(e){return[]};t.binding=function(e){throw new Error(\"process.binding is not supported\")};t.cwd=function(){return\"/\"};t.chdir=function(e){throw new Error(\"process.chdir is not supported\")};t.umask=function(){return 0}}};var t={};function __nccwpck_require__(r){var n=t[r];if(n!==undefined){return n.exports}var i=t[r]={exports:{}};var o=true;try{e[r](i,i.exports,__nccwpck_require__);o=false}finally{if(o)delete t[r]}return i.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var r=__nccwpck_require__(229);module.exports=r})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL3Byb2Nlc3MvYnJvd3Nlci5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsWUFBWSxPQUFPLGdCQUFnQixtQkFBbUIsTUFBTSxNQUFNLDRCQUE0QixtREFBbUQsK0JBQStCLHFEQUFxRCxZQUFZLElBQUksbUNBQW1DLGFBQWEsS0FBSyxvQkFBb0IsU0FBUyxtQkFBbUIsSUFBSSxxQ0FBcUMsZUFBZSxLQUFLLHVCQUF1QixTQUFTLHVCQUF1QixJQUFJLHVCQUF1QixtQkFBbUIsdUJBQXVCLDJDQUEyQyxhQUFhLHVCQUF1QixJQUFJLGNBQWMsU0FBUyxJQUFJLHdCQUF3QixTQUFTLDBCQUEwQiw0QkFBNEIscUJBQXFCLHVCQUF1QixnREFBZ0QsZUFBZSx1QkFBdUIsSUFBSSxZQUFZLFNBQVMsSUFBSSxzQkFBc0IsU0FBUyx3QkFBd0IsU0FBUyxZQUFZLE1BQU0sU0FBUywyQkFBMkIsV0FBVyxPQUFPLFFBQVEsYUFBYSxjQUFjLEtBQUssS0FBSyxhQUFhLGNBQWMsc0JBQXNCLE1BQU0sT0FBTyxrQ0FBa0MsT0FBTyxlQUFlLFNBQVMsSUFBSSxLQUFLLGFBQWEsTUFBTSxZQUFZLEtBQUssV0FBVyxPQUFPLFFBQVEsbUJBQW1CLHVCQUF1QixvQ0FBb0MsdUJBQXVCLFlBQVksbUJBQW1CLEtBQUsscUJBQXFCLHNCQUFzQixxQkFBcUIseUJBQXlCLG1CQUFtQixXQUFXLGFBQWEsOEJBQThCLGlDQUFpQyxrQkFBa0IsZUFBZSxTQUFTLFVBQVUsYUFBYSxjQUFjLGlCQUFpQixVQUFVLG1CQUFtQixZQUFZLFdBQVcsc0JBQXNCLDBCQUEwQixZQUFZLHVCQUF1QiwyQkFBMkIsd0JBQXdCLFVBQVUsc0JBQXNCLHFEQUFxRCxpQkFBaUIsV0FBVyxvQkFBb0IsbURBQW1ELG1CQUFtQixZQUFZLFNBQVMsZ0NBQWdDLFdBQVcsa0JBQWtCLGlCQUFpQixZQUFZLFlBQVksV0FBVyxJQUFJLHNDQUFzQyxRQUFRLFFBQVEsaUJBQWlCLGlCQUFpQixtRUFBbUUsU0FBUyxLQUFLLCtCQUErQixpQkFBaUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9wcm9jZXNzL2Jyb3dzZXIuanM/MWIxZCJdLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24oKXt2YXIgZT17MjI5OmZ1bmN0aW9uKGUpe3ZhciB0PWUuZXhwb3J0cz17fTt2YXIgcjt2YXIgbjtmdW5jdGlvbiBkZWZhdWx0U2V0VGltb3V0KCl7dGhyb3cgbmV3IEVycm9yKFwic2V0VGltZW91dCBoYXMgbm90IGJlZW4gZGVmaW5lZFwiKX1mdW5jdGlvbiBkZWZhdWx0Q2xlYXJUaW1lb3V0KCl7dGhyb3cgbmV3IEVycm9yKFwiY2xlYXJUaW1lb3V0IGhhcyBub3QgYmVlbiBkZWZpbmVkXCIpfShmdW5jdGlvbigpe3RyeXtpZih0eXBlb2Ygc2V0VGltZW91dD09PVwiZnVuY3Rpb25cIil7cj1zZXRUaW1lb3V0fWVsc2V7cj1kZWZhdWx0U2V0VGltb3V0fX1jYXRjaChlKXtyPWRlZmF1bHRTZXRUaW1vdXR9dHJ5e2lmKHR5cGVvZiBjbGVhclRpbWVvdXQ9PT1cImZ1bmN0aW9uXCIpe249Y2xlYXJUaW1lb3V0fWVsc2V7bj1kZWZhdWx0Q2xlYXJUaW1lb3V0fX1jYXRjaChlKXtuPWRlZmF1bHRDbGVhclRpbWVvdXR9fSkoKTtmdW5jdGlvbiBydW5UaW1lb3V0KGUpe2lmKHI9PT1zZXRUaW1lb3V0KXtyZXR1cm4gc2V0VGltZW91dChlLDApfWlmKChyPT09ZGVmYXVsdFNldFRpbW91dHx8IXIpJiZzZXRUaW1lb3V0KXtyPXNldFRpbWVvdXQ7cmV0dXJuIHNldFRpbWVvdXQoZSwwKX10cnl7cmV0dXJuIHIoZSwwKX1jYXRjaCh0KXt0cnl7cmV0dXJuIHIuY2FsbChudWxsLGUsMCl9Y2F0Y2godCl7cmV0dXJuIHIuY2FsbCh0aGlzLGUsMCl9fX1mdW5jdGlvbiBydW5DbGVhclRpbWVvdXQoZSl7aWYobj09PWNsZWFyVGltZW91dCl7cmV0dXJuIGNsZWFyVGltZW91dChlKX1pZigobj09PWRlZmF1bHRDbGVhclRpbWVvdXR8fCFuKSYmY2xlYXJUaW1lb3V0KXtuPWNsZWFyVGltZW91dDtyZXR1cm4gY2xlYXJUaW1lb3V0KGUpfXRyeXtyZXR1cm4gbihlKX1jYXRjaCh0KXt0cnl7cmV0dXJuIG4uY2FsbChudWxsLGUpfWNhdGNoKHQpe3JldHVybiBuLmNhbGwodGhpcyxlKX19fXZhciBpPVtdO3ZhciBvPWZhbHNlO3ZhciB1O3ZhciBhPS0xO2Z1bmN0aW9uIGNsZWFuVXBOZXh0VGljaygpe2lmKCFvfHwhdSl7cmV0dXJufW89ZmFsc2U7aWYodS5sZW5ndGgpe2k9dS5jb25jYXQoaSl9ZWxzZXthPS0xfWlmKGkubGVuZ3RoKXtkcmFpblF1ZXVlKCl9fWZ1bmN0aW9uIGRyYWluUXVldWUoKXtpZihvKXtyZXR1cm59dmFyIGU9cnVuVGltZW91dChjbGVhblVwTmV4dFRpY2spO289dHJ1ZTt2YXIgdD1pLmxlbmd0aDt3aGlsZSh0KXt1PWk7aT1bXTt3aGlsZSgrK2E8dCl7aWYodSl7dVthXS5ydW4oKX19YT0tMTt0PWkubGVuZ3RofXU9bnVsbDtvPWZhbHNlO3J1bkNsZWFyVGltZW91dChlKX10Lm5leHRUaWNrPWZ1bmN0aW9uKGUpe3ZhciB0PW5ldyBBcnJheShhcmd1bWVudHMubGVuZ3RoLTEpO2lmKGFyZ3VtZW50cy5sZW5ndGg+MSl7Zm9yKHZhciByPTE7cjxhcmd1bWVudHMubGVuZ3RoO3IrKyl7dFtyLTFdPWFyZ3VtZW50c1tyXX19aS5wdXNoKG5ldyBJdGVtKGUsdCkpO2lmKGkubGVuZ3RoPT09MSYmIW8pe3J1blRpbWVvdXQoZHJhaW5RdWV1ZSl9fTtmdW5jdGlvbiBJdGVtKGUsdCl7dGhpcy5mdW49ZTt0aGlzLmFycmF5PXR9SXRlbS5wcm90b3R5cGUucnVuPWZ1bmN0aW9uKCl7dGhpcy5mdW4uYXBwbHkobnVsbCx0aGlzLmFycmF5KX07dC50aXRsZT1cImJyb3dzZXJcIjt0LmJyb3dzZXI9dHJ1ZTt0LmVudj17fTt0LmFyZ3Y9W107dC52ZXJzaW9uPVwiXCI7dC52ZXJzaW9ucz17fTtmdW5jdGlvbiBub29wKCl7fXQub249bm9vcDt0LmFkZExpc3RlbmVyPW5vb3A7dC5vbmNlPW5vb3A7dC5vZmY9bm9vcDt0LnJlbW92ZUxpc3RlbmVyPW5vb3A7dC5yZW1vdmVBbGxMaXN0ZW5lcnM9bm9vcDt0LmVtaXQ9bm9vcDt0LnByZXBlbmRMaXN0ZW5lcj1ub29wO3QucHJlcGVuZE9uY2VMaXN0ZW5lcj1ub29wO3QubGlzdGVuZXJzPWZ1bmN0aW9uKGUpe3JldHVybltdfTt0LmJpbmRpbmc9ZnVuY3Rpb24oZSl7dGhyb3cgbmV3IEVycm9yKFwicHJvY2Vzcy5iaW5kaW5nIGlzIG5vdCBzdXBwb3J0ZWRcIil9O3QuY3dkPWZ1bmN0aW9uKCl7cmV0dXJuXCIvXCJ9O3QuY2hkaXI9ZnVuY3Rpb24oZSl7dGhyb3cgbmV3IEVycm9yKFwicHJvY2Vzcy5jaGRpciBpcyBub3Qgc3VwcG9ydGVkXCIpfTt0LnVtYXNrPWZ1bmN0aW9uKCl7cmV0dXJuIDB9fX07dmFyIHQ9e307ZnVuY3Rpb24gX19uY2N3cGNrX3JlcXVpcmVfXyhyKXt2YXIgbj10W3JdO2lmKG4hPT11bmRlZmluZWQpe3JldHVybiBuLmV4cG9ydHN9dmFyIGk9dFtyXT17ZXhwb3J0czp7fX07dmFyIG89dHJ1ZTt0cnl7ZVtyXShpLGkuZXhwb3J0cyxfX25jY3dwY2tfcmVxdWlyZV9fKTtvPWZhbHNlfWZpbmFsbHl7aWYobylkZWxldGUgdFtyXX1yZXR1cm4gaS5leHBvcnRzfWlmKHR5cGVvZiBfX25jY3dwY2tfcmVxdWlyZV9fIT09XCJ1bmRlZmluZWRcIilfX25jY3dwY2tfcmVxdWlyZV9fLmFiPV9fZGlybmFtZStcIi9cIjt2YXIgcj1fX25jY3dwY2tfcmVxdWlyZV9fKDIyOSk7bW9kdWxlLmV4cG9ydHM9cn0pKCk7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/compiled/process/browser.js\n"));

/***/ })

});